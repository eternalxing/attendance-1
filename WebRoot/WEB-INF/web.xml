<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  <display-name></display-name>	
  <context-param>
  <param-name>contextConfigLocation</param-name>    
<param-value>classpath*:applicationContext.xml</param-value>    
</context-param>    
  
  <welcome-file-list>  
    <welcome-file>login.jsp</welcome-file>  
  </welcome-file-list>  
  <servlet>  
  <servlet-name>mvc</servlet-name>  
  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
 <init-param>  
     <param-name>contextConfigLocation</param-name>  
     <param-value>classpath:spmvc-servlet.xml</param-value>  
 </init-param>  
  </servlet>  
 
  <servlet-mapping>  
  <servlet-name>mvc</servlet-name>  
  <url-pattern>*.do</url-pattern>  
  </servlet-mapping>  
    
  <listener>  
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
  </listener>  
   <listener>  
    <listener-class>com.work.interceptor.SessionListener</listener-class>  
  </listener>  
  <listener>
  <listener-class>com.work.interceptor.H2DBServerStartListener</listener-class>
  </listener>
  <session-config>
  <session-timeout>180</session-timeout>
  </session-config>
  <filter>  
        <filter-name>encodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>   
        <init-param>             
        <param-name>forceEncoding</param-name>          
           <param-value>true</param-value>                   
        </init-param>
    </filter>  
    <filter-mapping>  
        <filter-name>encodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
     <!-- 使用H2控制台的Servlet H2控制台是一个独立的应用程序，包括它自己的Web服务器，但它可以作为一个servlet作为-->  
    <servlet>  
        <servlet-name>H2Console</servlet-name>  
        <servlet-class>org.h2.server.web.WebServlet</servlet-class>  
         <init-param>  
            <param-name>webAllowOthers</param-name>  
            <param-value></param-value>  
        </init-param>  
        <init-param>  
            <param-name>trace</param-name>  
            <param-value></param-value>  
        </init-param>  
        <load-on-startup>1</load-on-startup>  
    </servlet>  
    <error-page>
    <!-- 404错误页面 -->
    <error-code>404</error-code>
    <location>/404.jsp</location>
     <error-code>500</error-code>
    <location>/500.jsp</location>
    </error-page>
    <!-- 映射H2控制台的访问路径 -->  
    <servlet-mapping>  
        <servlet-name>H2Console</servlet-name>  
        <url-pattern>/console/*</url-pattern>  
    </servlet-mapping>  
    <!--  
    <security-constraint> 
       <web-resource-collection > 
              <web-resource-name >SSL</web-resource-name> 
              <url-pattern>/*</url-pattern> 
       </web-resource-collection>
                             
       <user-data-constraint> 
              <transport-guarantee>CONFIDENTIAL</transport-guarantee> 
       </user-data-constraint> 
</security-constraint>
-->
</web-app>
